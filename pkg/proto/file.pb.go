// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: api/proto/file.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Typ   uint32 `protobuf:"varint,3,opt,name=typ,proto3" json:"typ,omitempty"`
	Pid   uint32 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *FileLock) Reset() {
	*x = FileLock{}
	mi := &file_api_proto_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLock) ProtoMessage() {}

func (x *FileLock) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLock.ProtoReflect.Descriptor instead.
func (*FileLock) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileLock) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *FileLock) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *FileLock) GetTyp() uint32 {
	if x != nil {
		return x.Typ
	}
	return 0
}

func (x *FileLock) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type OpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller *Caller `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	Path   string  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Flags  uint32  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	mi := &file_api_proto_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{1}
}

func (x *OpenRequest) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *OpenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type OpenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *OpenReply) Reset() {
	*x = OpenReply{}
	mi := &file_api_proto_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenReply) ProtoMessage() {}

func (x *OpenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenReply.ProtoReflect.Descriptor instead.
func (*OpenReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{2}
}

func (x *OpenReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller *Caller `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	Path   string  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Flags  uint32  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Mode   uint32  `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_api_proto_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRequest) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *CreateRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *CreateRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	mi := &file_api_proto_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{4}
}

func (x *CreateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_api_proto_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{5}
}

func (x *ReadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes  []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Size   int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReadReply) Reset() {
	*x = ReadReply{}
	mi := &file_api_proto_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReply) ProtoMessage() {}

func (x *ReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReply.ProtoReflect.Descriptor instead.
func (*ReadReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{6}
}

func (x *ReadReply) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *ReadReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReadReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bytes  []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_api_proto_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{7}
}

func (x *WriteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteRequest) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *WriteRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type WriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Written uint32 `protobuf:"varint,1,opt,name=written,proto3" json:"written,omitempty"`
	Status  int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *WriteReply) Reset() {
	*x = WriteReply{}
	mi := &file_api_proto_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteReply) ProtoMessage() {}

func (x *WriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteReply.ProtoReflect.Descriptor instead.
func (*WriteReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{8}
}

func (x *WriteReply) GetWritten() uint32 {
	if x != nil {
		return x.Written
	}
	return 0
}

func (x *WriteReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FsyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Flags int64  `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FsyncRequest) Reset() {
	*x = FsyncRequest{}
	mi := &file_api_proto_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsyncRequest) ProtoMessage() {}

func (x *FsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsyncRequest.ProtoReflect.Descriptor instead.
func (*FsyncRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{9}
}

func (x *FsyncRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FsyncRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FsyncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FsyncReply) Reset() {
	*x = FsyncReply{}
	mi := &file_api_proto_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FsyncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsyncReply) ProtoMessage() {}

func (x *FsyncReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsyncReply.ProtoReflect.Descriptor instead.
func (*FsyncReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{10}
}

func (x *FsyncReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	mi := &file_api_proto_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReleaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseReply) Reset() {
	*x = ReleaseReply{}
	mi := &file_api_proto_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReply) ProtoMessage() {}

func (x *ReleaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReply.ProtoReflect.Descriptor instead.
func (*ReleaseReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{12}
}

type FlushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FlushRequest) Reset() {
	*x = FlushRequest{}
	mi := &file_api_proto_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushRequest) ProtoMessage() {}

func (x *FlushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushRequest.ProtoReflect.Descriptor instead.
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{13}
}

func (x *FlushRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FlushReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FlushReply) Reset() {
	*x = FlushReply{}
	mi := &file_api_proto_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushReply) ProtoMessage() {}

func (x *FlushReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushReply.ProtoReflect.Descriptor instead.
func (*FlushReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{14}
}

func (x *FlushReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetLkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner uint64    `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Flags uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Lk    *FileLock `protobuf:"bytes,4,opt,name=lk,proto3" json:"lk,omitempty"`
}

func (x *GetLkRequest) Reset() {
	*x = GetLkRequest{}
	mi := &file_api_proto_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLkRequest) ProtoMessage() {}

func (x *GetLkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLkRequest.ProtoReflect.Descriptor instead.
func (*GetLkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{15}
}

func (x *GetLkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetLkRequest) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *GetLkRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *GetLkRequest) GetLk() *FileLock {
	if x != nil {
		return x.Lk
	}
	return nil
}

type GetLkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Lk     *FileLock `protobuf:"bytes,2,opt,name=lk,proto3" json:"lk,omitempty"`
}

func (x *GetLkReply) Reset() {
	*x = GetLkReply{}
	mi := &file_api_proto_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLkReply) ProtoMessage() {}

func (x *GetLkReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLkReply.ProtoReflect.Descriptor instead.
func (*GetLkReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{16}
}

func (x *GetLkReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetLkReply) GetLk() *FileLock {
	if x != nil {
		return x.Lk
	}
	return nil
}

type SetLkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner uint64    `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Flags uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Lk    *FileLock `protobuf:"bytes,4,opt,name=lk,proto3" json:"lk,omitempty"`
}

func (x *SetLkRequest) Reset() {
	*x = SetLkRequest{}
	mi := &file_api_proto_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLkRequest) ProtoMessage() {}

func (x *SetLkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLkRequest.ProtoReflect.Descriptor instead.
func (*SetLkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{17}
}

func (x *SetLkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetLkRequest) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *SetLkRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SetLkRequest) GetLk() *FileLock {
	if x != nil {
		return x.Lk
	}
	return nil
}

type SetLkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetLkReply) Reset() {
	*x = SetLkReply{}
	mi := &file_api_proto_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLkReply) ProtoMessage() {}

func (x *SetLkReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLkReply.ProtoReflect.Descriptor instead.
func (*SetLkReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{18}
}

func (x *SetLkReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetLkwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner uint64    `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Flags uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Lk    *FileLock `protobuf:"bytes,4,opt,name=lk,proto3" json:"lk,omitempty"`
}

func (x *SetLkwRequest) Reset() {
	*x = SetLkwRequest{}
	mi := &file_api_proto_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLkwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLkwRequest) ProtoMessage() {}

func (x *SetLkwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLkwRequest.ProtoReflect.Descriptor instead.
func (*SetLkwRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{19}
}

func (x *SetLkwRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetLkwRequest) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *SetLkwRequest) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SetLkwRequest) GetLk() *FileLock {
	if x != nil {
		return x.Lk
	}
	return nil
}

type SetLkwReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetLkwReply) Reset() {
	*x = SetLkwReply{}
	mi := &file_api_proto_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLkwReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLkwReply) ProtoMessage() {}

func (x *SetLkwReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLkwReply.ProtoReflect.Descriptor instead.
func (*SetLkwReply) Descriptor() ([]byte, []int) {
	return file_api_proto_file_proto_rawDescGZIP(), []int{20}
}

func (x *SetLkwReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_api_proto_file_proto protoreflect.FileDescriptor

var file_api_proto_file_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65,
	0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x79, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x22, 0x61, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4d, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x3e, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x46, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x46, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x0e,
	0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x0a, 0x0c, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x24, 0x0a, 0x0a, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x6c, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x02, 0x6c, 0x6b, 0x22, 0x48, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x6c, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x02, 0x6c, 0x6b, 0x22, 0x72, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x6c, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x02, 0x6c, 0x6b, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x4c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x73, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x22, 0x0a, 0x02, 0x6c, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x02, 0x6c, 0x6b, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xb5, 0x04, 0x0a,
	0x07, 0x52, 0x70, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x15, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x15,
	0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x67,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35,
	0x0a, 0x05, 0x46, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x65, 0x2e, 0x46, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x46, 0x73, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x12, 0x16,
	0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x65, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05,
	0x47, 0x65, 0x74, 0x4c, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x12, 0x16, 0x2e, 0x67,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x4c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x06, 0x53, 0x65,
	0x74, 0x4c, 0x6b, 0x77, 0x12, 0x17, 0x2e, 0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x4c, 0x6b, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x67, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6b, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_file_proto_rawDescOnce sync.Once
	file_api_proto_file_proto_rawDescData = file_api_proto_file_proto_rawDesc
)

func file_api_proto_file_proto_rawDescGZIP() []byte {
	file_api_proto_file_proto_rawDescOnce.Do(func() {
		file_api_proto_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_file_proto_rawDescData)
	})
	return file_api_proto_file_proto_rawDescData
}

var file_api_proto_file_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_file_proto_goTypes = []any{
	(*FileLock)(nil),       // 0: gmountie.FileLock
	(*OpenRequest)(nil),    // 1: gmountie.OpenRequest
	(*OpenReply)(nil),      // 2: gmountie.OpenReply
	(*CreateRequest)(nil),  // 3: gmountie.CreateRequest
	(*CreateReply)(nil),    // 4: gmountie.CreateReply
	(*ReadRequest)(nil),    // 5: gmountie.ReadRequest
	(*ReadReply)(nil),      // 6: gmountie.ReadReply
	(*WriteRequest)(nil),   // 7: gmountie.WriteRequest
	(*WriteReply)(nil),     // 8: gmountie.WriteReply
	(*FsyncRequest)(nil),   // 9: gmountie.FsyncRequest
	(*FsyncReply)(nil),     // 10: gmountie.FsyncReply
	(*ReleaseRequest)(nil), // 11: gmountie.ReleaseRequest
	(*ReleaseReply)(nil),   // 12: gmountie.ReleaseReply
	(*FlushRequest)(nil),   // 13: gmountie.FlushRequest
	(*FlushReply)(nil),     // 14: gmountie.FlushReply
	(*GetLkRequest)(nil),   // 15: gmountie.GetLkRequest
	(*GetLkReply)(nil),     // 16: gmountie.GetLkReply
	(*SetLkRequest)(nil),   // 17: gmountie.SetLkRequest
	(*SetLkReply)(nil),     // 18: gmountie.SetLkReply
	(*SetLkwRequest)(nil),  // 19: gmountie.SetLkwRequest
	(*SetLkwReply)(nil),    // 20: gmountie.SetLkwReply
	(*Caller)(nil),         // 21: gmountie.Caller
}
var file_api_proto_file_proto_depIdxs = []int32{
	21, // 0: gmountie.OpenRequest.caller:type_name -> gmountie.Caller
	21, // 1: gmountie.CreateRequest.caller:type_name -> gmountie.Caller
	0,  // 2: gmountie.GetLkRequest.lk:type_name -> gmountie.FileLock
	0,  // 3: gmountie.GetLkReply.lk:type_name -> gmountie.FileLock
	0,  // 4: gmountie.SetLkRequest.lk:type_name -> gmountie.FileLock
	0,  // 5: gmountie.SetLkwRequest.lk:type_name -> gmountie.FileLock
	1,  // 6: gmountie.RpcFile.Open:input_type -> gmountie.OpenRequest
	3,  // 7: gmountie.RpcFile.Create:input_type -> gmountie.CreateRequest
	5,  // 8: gmountie.RpcFile.Read:input_type -> gmountie.ReadRequest
	7,  // 9: gmountie.RpcFile.Write:input_type -> gmountie.WriteRequest
	11, // 10: gmountie.RpcFile.Release:input_type -> gmountie.ReleaseRequest
	9,  // 11: gmountie.RpcFile.Fsync:input_type -> gmountie.FsyncRequest
	13, // 12: gmountie.RpcFile.Flush:input_type -> gmountie.FlushRequest
	15, // 13: gmountie.RpcFile.GetLk:input_type -> gmountie.GetLkRequest
	17, // 14: gmountie.RpcFile.SetLk:input_type -> gmountie.SetLkRequest
	19, // 15: gmountie.RpcFile.SetLkw:input_type -> gmountie.SetLkwRequest
	2,  // 16: gmountie.RpcFile.Open:output_type -> gmountie.OpenReply
	4,  // 17: gmountie.RpcFile.Create:output_type -> gmountie.CreateReply
	6,  // 18: gmountie.RpcFile.Read:output_type -> gmountie.ReadReply
	8,  // 19: gmountie.RpcFile.Write:output_type -> gmountie.WriteReply
	12, // 20: gmountie.RpcFile.Release:output_type -> gmountie.ReleaseReply
	10, // 21: gmountie.RpcFile.Fsync:output_type -> gmountie.FsyncReply
	14, // 22: gmountie.RpcFile.Flush:output_type -> gmountie.FlushReply
	16, // 23: gmountie.RpcFile.GetLk:output_type -> gmountie.GetLkReply
	18, // 24: gmountie.RpcFile.SetLk:output_type -> gmountie.SetLkReply
	20, // 25: gmountie.RpcFile.SetLkw:output_type -> gmountie.SetLkwReply
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_proto_file_proto_init() }
func file_api_proto_file_proto_init() {
	if File_api_proto_file_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_file_proto_goTypes,
		DependencyIndexes: file_api_proto_file_proto_depIdxs,
		MessageInfos:      file_api_proto_file_proto_msgTypes,
	}.Build()
	File_api_proto_file_proto = out.File
	file_api_proto_file_proto_rawDesc = nil
	file_api_proto_file_proto_goTypes = nil
	file_api_proto_file_proto_depIdxs = nil
}
