// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: api/proto/fs.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid uint32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_api_proto_fs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{0}
}

func (x *Owner) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Owner) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type DirEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode uint32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ino  uint64 `protobuf:"varint,3,opt,name=ino,proto3" json:"ino,omitempty"`
	Off  uint64 `protobuf:"varint,4,opt,name=off,proto3" json:"off,omitempty"`
}

func (x *DirEntry) Reset() {
	*x = DirEntry{}
	mi := &file_api_proto_fs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirEntry) ProtoMessage() {}

func (x *DirEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirEntry.ProtoReflect.Descriptor instead.
func (*DirEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{1}
}

func (x *DirEntry) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *DirEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirEntry) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *DirEntry) GetOff() uint64 {
	if x != nil {
		return x.Off
	}
	return 0
}

type Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino       uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Size      uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Blocks    uint64 `protobuf:"varint,3,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Atime     uint64 `protobuf:"varint,4,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime     uint64 `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime     uint64 `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Atimensec uint32 `protobuf:"varint,7,opt,name=atimensec,proto3" json:"atimensec,omitempty"`
	Mtimensec uint32 `protobuf:"varint,8,opt,name=mtimensec,proto3" json:"mtimensec,omitempty"`
	Ctimensec uint32 `protobuf:"varint,9,opt,name=ctimensec,proto3" json:"ctimensec,omitempty"`
	Mode      uint32 `protobuf:"varint,10,opt,name=mode,proto3" json:"mode,omitempty"`
	Nlink     uint32 `protobuf:"varint,11,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Owner     *Owner `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
	Uid       uint32 `protobuf:"varint,13,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid       uint32 `protobuf:"varint,14,opt,name=gid,proto3" json:"gid,omitempty"`
	Rdev      uint32 `protobuf:"varint,15,opt,name=rdev,proto3" json:"rdev,omitempty"`
	Blksize   uint32 `protobuf:"varint,16,opt,name=blksize,proto3" json:"blksize,omitempty"`
	Padding   uint32 `protobuf:"varint,17,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *Attr) Reset() {
	*x = Attr{}
	mi := &file_api_proto_fs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{2}
}

func (x *Attr) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *Attr) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Attr) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *Attr) GetAtime() uint64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *Attr) GetMtime() uint64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *Attr) GetCtime() uint64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Attr) GetAtimensec() uint32 {
	if x != nil {
		return x.Atimensec
	}
	return 0
}

func (x *Attr) GetMtimensec() uint32 {
	if x != nil {
		return x.Mtimensec
	}
	return 0
}

func (x *Attr) GetCtimensec() uint32 {
	if x != nil {
		return x.Ctimensec
	}
	return 0
}

func (x *Attr) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Attr) GetNlink() uint32 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *Attr) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Attr) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Attr) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *Attr) GetRdev() uint32 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

func (x *Attr) GetBlksize() uint32 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

func (x *Attr) GetPadding() uint32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

type StatFsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *StatFsRequest) Reset() {
	*x = StatFsRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFsRequest) ProtoMessage() {}

func (x *StatFsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFsRequest.ProtoReflect.Descriptor instead.
func (*StatFsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{3}
}

func (x *StatFsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StatFsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks  uint64   `protobuf:"varint,1,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Bfree   uint64   `protobuf:"varint,2,opt,name=bfree,proto3" json:"bfree,omitempty"`
	Bavail  uint64   `protobuf:"varint,3,opt,name=bavail,proto3" json:"bavail,omitempty"`
	Files   uint64   `protobuf:"varint,4,opt,name=files,proto3" json:"files,omitempty"`
	Ffree   uint64   `protobuf:"varint,5,opt,name=ffree,proto3" json:"ffree,omitempty"`
	Bsize   uint32   `protobuf:"varint,6,opt,name=bsize,proto3" json:"bsize,omitempty"`
	Namelen uint32   `protobuf:"varint,7,opt,name=namelen,proto3" json:"namelen,omitempty"`
	Frsize  uint32   `protobuf:"varint,8,opt,name=frsize,proto3" json:"frsize,omitempty"`
	Padding uint32   `protobuf:"varint,9,opt,name=padding,proto3" json:"padding,omitempty"`
	Spare   []uint32 `protobuf:"varint,10,rep,packed,name=spare,proto3" json:"spare,omitempty"`
}

func (x *StatFsReply) Reset() {
	*x = StatFsReply{}
	mi := &file_api_proto_fs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFsReply) ProtoMessage() {}

func (x *StatFsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFsReply.ProtoReflect.Descriptor instead.
func (*StatFsReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{4}
}

func (x *StatFsReply) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *StatFsReply) GetBfree() uint64 {
	if x != nil {
		return x.Bfree
	}
	return 0
}

func (x *StatFsReply) GetBavail() uint64 {
	if x != nil {
		return x.Bavail
	}
	return 0
}

func (x *StatFsReply) GetFiles() uint64 {
	if x != nil {
		return x.Files
	}
	return 0
}

func (x *StatFsReply) GetFfree() uint64 {
	if x != nil {
		return x.Ffree
	}
	return 0
}

func (x *StatFsReply) GetBsize() uint32 {
	if x != nil {
		return x.Bsize
	}
	return 0
}

func (x *StatFsReply) GetNamelen() uint32 {
	if x != nil {
		return x.Namelen
	}
	return 0
}

func (x *StatFsReply) GetFrsize() uint32 {
	if x != nil {
		return x.Frsize
	}
	return 0
}

func (x *StatFsReply) GetPadding() uint32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

func (x *StatFsReply) GetSpare() []uint32 {
	if x != nil {
		return x.Spare
	}
	return nil
}

type GetAttrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetAttrRequest) Reset() {
	*x = GetAttrRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrRequest) ProtoMessage() {}

func (x *GetAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrRequest.ProtoReflect.Descriptor instead.
func (*GetAttrRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{5}
}

func (x *GetAttrRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetAttrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attr `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Status     int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetAttrReply) Reset() {
	*x = GetAttrReply{}
	mi := &file_api_proto_fs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrReply) ProtoMessage() {}

func (x *GetAttrReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrReply.ProtoReflect.Descriptor instead.
func (*GetAttrReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{6}
}

func (x *GetAttrReply) GetAttributes() *Attr {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GetAttrReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OpenDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *OpenDirRequest) Reset() {
	*x = OpenDirRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDirRequest) ProtoMessage() {}

func (x *OpenDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDirRequest.ProtoReflect.Descriptor instead.
func (*OpenDirRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{7}
}

func (x *OpenDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type OpenDirReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*DirEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Status  int32       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *OpenDirReply) Reset() {
	*x = OpenDirReply{}
	mi := &file_api_proto_fs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenDirReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDirReply) ProtoMessage() {}

func (x *OpenDirReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDirReply.ProtoReflect.Descriptor instead.
func (*OpenDirReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{8}
}

func (x *OpenDirReply) GetEntries() []*DirEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *OpenDirReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UnlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UnlinkRequest) Reset() {
	*x = UnlinkRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkRequest) ProtoMessage() {}

func (x *UnlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkRequest.ProtoReflect.Descriptor instead.
func (*UnlinkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{9}
}

func (x *UnlinkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UnlinkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UnlinkReply) Reset() {
	*x = UnlinkReply{}
	mi := &file_api_proto_fs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkReply) ProtoMessage() {}

func (x *UnlinkReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkReply.ProtoReflect.Descriptor instead.
func (*UnlinkReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{10}
}

func (x *UnlinkReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode uint32 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *AccessRequest) Reset() {
	*x = AccessRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequest) ProtoMessage() {}

func (x *AccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequest.ProtoReflect.Descriptor instead.
func (*AccessRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{11}
}

func (x *AccessRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AccessRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type AccessReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AccessReply) Reset() {
	*x = AccessReply{}
	mi := &file_api_proto_fs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessReply) ProtoMessage() {}

func (x *AccessReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessReply.ProtoReflect.Descriptor instead.
func (*AccessReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{12}
}

func (x *AccessReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type TruncateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *TruncateRequest) Reset() {
	*x = TruncateRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateRequest) ProtoMessage() {}

func (x *TruncateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateRequest.ProtoReflect.Descriptor instead.
func (*TruncateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{13}
}

func (x *TruncateRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TruncateRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type TruncateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TruncateReply) Reset() {
	*x = TruncateReply{}
	mi := &file_api_proto_fs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateReply) ProtoMessage() {}

func (x *TruncateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateReply.ProtoReflect.Descriptor instead.
func (*TruncateReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{14}
}

func (x *TruncateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Uid  uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid  uint32 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *ChownRequest) Reset() {
	*x = ChownRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChownRequest) ProtoMessage() {}

func (x *ChownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChownRequest.ProtoReflect.Descriptor instead.
func (*ChownRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{15}
}

func (x *ChownRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChownRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ChownRequest) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type ChownReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChownReply) Reset() {
	*x = ChownReply{}
	mi := &file_api_proto_fs_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChownReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChownReply) ProtoMessage() {}

func (x *ChownReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChownReply.ProtoReflect.Descriptor instead.
func (*ChownReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{16}
}

func (x *ChownReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChmodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode uint32 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *ChmodRequest) Reset() {
	*x = ChmodRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChmodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChmodRequest) ProtoMessage() {}

func (x *ChmodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChmodRequest.ProtoReflect.Descriptor instead.
func (*ChmodRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{17}
}

func (x *ChmodRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChmodRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type ChmodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChmodReply) Reset() {
	*x = ChmodReply{}
	mi := &file_api_proto_fs_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChmodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChmodReply) ProtoMessage() {}

func (x *ChmodReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChmodReply.ProtoReflect.Descriptor instead.
func (*ChmodReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{18}
}

func (x *ChmodReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MkdirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode uint32 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *MkdirRequest) Reset() {
	*x = MkdirRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MkdirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkdirRequest) ProtoMessage() {}

func (x *MkdirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkdirRequest.ProtoReflect.Descriptor instead.
func (*MkdirRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{19}
}

func (x *MkdirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MkdirRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type MkdirReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MkdirReply) Reset() {
	*x = MkdirReply{}
	mi := &file_api_proto_fs_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MkdirReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkdirReply) ProtoMessage() {}

func (x *MkdirReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkdirReply.ProtoReflect.Descriptor instead.
func (*MkdirReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{20}
}

func (x *MkdirReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RmdirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RmdirRequest) Reset() {
	*x = RmdirRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RmdirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmdirRequest) ProtoMessage() {}

func (x *RmdirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmdirRequest.ProtoReflect.Descriptor instead.
func (*RmdirRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{21}
}

func (x *RmdirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RmdirReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RmdirReply) Reset() {
	*x = RmdirReply{}
	mi := &file_api_proto_fs_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RmdirReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmdirReply) ProtoMessage() {}

func (x *RmdirReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmdirReply.ProtoReflect.Descriptor instead.
func (*RmdirReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{22}
}

func (x *RmdirReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RenameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldName string `protobuf:"bytes,1,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *RenameRequest) Reset() {
	*x = RenameRequest{}
	mi := &file_api_proto_fs_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest) ProtoMessage() {}

func (x *RenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest.ProtoReflect.Descriptor instead.
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{23}
}

func (x *RenameRequest) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *RenameRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type RenameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RenameReply) Reset() {
	*x = RenameReply{}
	mi := &file_api_proto_fs_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameReply) ProtoMessage() {}

func (x *RenameReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_fs_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameReply.ProtoReflect.Descriptor instead.
func (*RenameReply) Descriptor() ([]byte, []int) {
	return file_api_proto_fs_proto_rawDescGZIP(), []int{24}
}

func (x *RenameReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_api_proto_fs_proto protoreflect.FileDescriptor

var file_api_proto_fs_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x22, 0x2b, 0x0a,
	0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x08, 0x44, 0x69,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f,
	0x66, 0x66, 0x22, 0x9c, 0x03, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x24, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x64, 0x65,
	0x76, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x64, 0x65, 0x76, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x46, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xfb, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x46,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62,
	0x66, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x66, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x66, 0x66, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6e, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x72, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x05, 0x73, 0x70,
	0x61, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x55, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x24, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x53, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x66, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x0a, 0x0d,
	0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x25, 0x0a, 0x0b, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0x25, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x6e,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x27, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x0c,
	0x43, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x43, 0x68,
	0x6d, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x22, 0x24, 0x0a, 0x0a, 0x43, 0x68, 0x6d, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x4d, 0x6b, 0x64, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x22, 0x24, 0x0a, 0x0a, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x6d, 0x64, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x24, 0x0a, 0x0a, 0x52, 0x6d,
	0x64, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x45, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xef,
	0x04, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x46, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x46, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x46, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x46, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x66, 0x73, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36,
	0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x66, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x15, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x43,
	0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x43, 0x68, 0x6d,
	0x6f, 0x64, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x43, 0x68, 0x6d,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x66, 0x73, 0x2e, 0x43, 0x68, 0x6d, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33,
	0x0a, 0x05, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66,
	0x73, 0x2e, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x52, 0x6d, 0x64, 0x69, 0x72, 0x12, 0x15, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x52, 0x6d, 0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x52, 0x6d,
	0x64, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_fs_proto_rawDescOnce sync.Once
	file_api_proto_fs_proto_rawDescData = file_api_proto_fs_proto_rawDesc
)

func file_api_proto_fs_proto_rawDescGZIP() []byte {
	file_api_proto_fs_proto_rawDescOnce.Do(func() {
		file_api_proto_fs_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_fs_proto_rawDescData)
	})
	return file_api_proto_fs_proto_rawDescData
}

var file_api_proto_fs_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_proto_fs_proto_goTypes = []any{
	(*Owner)(nil),           // 0: grpc_fs.Owner
	(*DirEntry)(nil),        // 1: grpc_fs.DirEntry
	(*Attr)(nil),            // 2: grpc_fs.Attr
	(*StatFsRequest)(nil),   // 3: grpc_fs.StatFsRequest
	(*StatFsReply)(nil),     // 4: grpc_fs.StatFsReply
	(*GetAttrRequest)(nil),  // 5: grpc_fs.GetAttrRequest
	(*GetAttrReply)(nil),    // 6: grpc_fs.GetAttrReply
	(*OpenDirRequest)(nil),  // 7: grpc_fs.OpenDirRequest
	(*OpenDirReply)(nil),    // 8: grpc_fs.OpenDirReply
	(*UnlinkRequest)(nil),   // 9: grpc_fs.UnlinkRequest
	(*UnlinkReply)(nil),     // 10: grpc_fs.UnlinkReply
	(*AccessRequest)(nil),   // 11: grpc_fs.AccessRequest
	(*AccessReply)(nil),     // 12: grpc_fs.AccessReply
	(*TruncateRequest)(nil), // 13: grpc_fs.TruncateRequest
	(*TruncateReply)(nil),   // 14: grpc_fs.TruncateReply
	(*ChownRequest)(nil),    // 15: grpc_fs.ChownRequest
	(*ChownReply)(nil),      // 16: grpc_fs.ChownReply
	(*ChmodRequest)(nil),    // 17: grpc_fs.ChmodRequest
	(*ChmodReply)(nil),      // 18: grpc_fs.ChmodReply
	(*MkdirRequest)(nil),    // 19: grpc_fs.MkdirRequest
	(*MkdirReply)(nil),      // 20: grpc_fs.MkdirReply
	(*RmdirRequest)(nil),    // 21: grpc_fs.RmdirRequest
	(*RmdirReply)(nil),      // 22: grpc_fs.RmdirReply
	(*RenameRequest)(nil),   // 23: grpc_fs.RenameRequest
	(*RenameReply)(nil),     // 24: grpc_fs.RenameReply
}
var file_api_proto_fs_proto_depIdxs = []int32{
	0,  // 0: grpc_fs.Attr.owner:type_name -> grpc_fs.Owner
	2,  // 1: grpc_fs.GetAttrReply.attributes:type_name -> grpc_fs.Attr
	1,  // 2: grpc_fs.OpenDirReply.entries:type_name -> grpc_fs.DirEntry
	5,  // 3: grpc_fs.RpcFs.GetAttr:input_type -> grpc_fs.GetAttrRequest
	3,  // 4: grpc_fs.RpcFs.StatFs:input_type -> grpc_fs.StatFsRequest
	7,  // 5: grpc_fs.RpcFs.OpenDir:input_type -> grpc_fs.OpenDirRequest
	9,  // 6: grpc_fs.RpcFs.Unlink:input_type -> grpc_fs.UnlinkRequest
	11, // 7: grpc_fs.RpcFs.Access:input_type -> grpc_fs.AccessRequest
	13, // 8: grpc_fs.RpcFs.Truncate:input_type -> grpc_fs.TruncateRequest
	15, // 9: grpc_fs.RpcFs.Chown:input_type -> grpc_fs.ChownRequest
	17, // 10: grpc_fs.RpcFs.Chmod:input_type -> grpc_fs.ChmodRequest
	19, // 11: grpc_fs.RpcFs.Mkdir:input_type -> grpc_fs.MkdirRequest
	21, // 12: grpc_fs.RpcFs.Rmdir:input_type -> grpc_fs.RmdirRequest
	23, // 13: grpc_fs.RpcFs.Rename:input_type -> grpc_fs.RenameRequest
	6,  // 14: grpc_fs.RpcFs.GetAttr:output_type -> grpc_fs.GetAttrReply
	4,  // 15: grpc_fs.RpcFs.StatFs:output_type -> grpc_fs.StatFsReply
	8,  // 16: grpc_fs.RpcFs.OpenDir:output_type -> grpc_fs.OpenDirReply
	10, // 17: grpc_fs.RpcFs.Unlink:output_type -> grpc_fs.UnlinkReply
	12, // 18: grpc_fs.RpcFs.Access:output_type -> grpc_fs.AccessReply
	14, // 19: grpc_fs.RpcFs.Truncate:output_type -> grpc_fs.TruncateReply
	16, // 20: grpc_fs.RpcFs.Chown:output_type -> grpc_fs.ChownReply
	18, // 21: grpc_fs.RpcFs.Chmod:output_type -> grpc_fs.ChmodReply
	20, // 22: grpc_fs.RpcFs.Mkdir:output_type -> grpc_fs.MkdirReply
	22, // 23: grpc_fs.RpcFs.Rmdir:output_type -> grpc_fs.RmdirReply
	24, // 24: grpc_fs.RpcFs.Rename:output_type -> grpc_fs.RenameReply
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_fs_proto_init() }
func file_api_proto_fs_proto_init() {
	if File_api_proto_fs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_fs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_fs_proto_goTypes,
		DependencyIndexes: file_api_proto_fs_proto_depIdxs,
		MessageInfos:      file_api_proto_fs_proto_msgTypes,
	}.Build()
	File_api_proto_fs_proto = out.File
	file_api_proto_fs_proto_rawDesc = nil
	file_api_proto_fs_proto_goTypes = nil
	file_api_proto_fs_proto_depIdxs = nil
}
