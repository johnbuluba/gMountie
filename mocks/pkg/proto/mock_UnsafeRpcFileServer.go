// Code generated by mockery v2.46.3. DO NOT EDIT.

package proto

import mock "github.com/stretchr/testify/mock"

// MockUnsafeRpcFileServer is an autogenerated mock type for the UnsafeRpcFileServer type
type MockUnsafeRpcFileServer struct {
	mock.Mock
}

type MockUnsafeRpcFileServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeRpcFileServer) EXPECT() *MockUnsafeRpcFileServer_Expecter {
	return &MockUnsafeRpcFileServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedRpcFileServer provides a mock function with given fields:
func (_m *MockUnsafeRpcFileServer) mustEmbedUnimplementedRpcFileServer() {
	_m.Called()
}

// MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedRpcFileServer'
type MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedRpcFileServer is a helper method to define mock.On call
func (_e *MockUnsafeRpcFileServer_Expecter) mustEmbedUnimplementedRpcFileServer() *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call {
	return &MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call{Call: _e.mock.On("mustEmbedUnimplementedRpcFileServer")}
}

func (_c *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call) Run(run func()) *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call) Return() *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call) RunAndReturn(run func()) *MockUnsafeRpcFileServer_mustEmbedUnimplementedRpcFileServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUnsafeRpcFileServer creates a new instance of MockUnsafeRpcFileServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnsafeRpcFileServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnsafeRpcFileServer {
	mock := &MockUnsafeRpcFileServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
