version: '3'

tasks:
  run:
    cmds:
      - wails dev -tags webkit2_41

  build:
    vars:
      BUILD_VERSION: '{{ .BUILD_VERSION | default "unknown" }}'
      BUILD_COMMIT: '{{.BUILD_COMMIT | default "unknown"}}'
      BUILD_DATE:  '{{.BUILD_DATE | default "unknown"}}'
    cmds:
      - wails build -clean -tags webkit2_41 -ldflags "-X gmountie/pkg.version={{.BUILD_VERSION}} -X gmountie/pkg.commit={{.BUILD_COMMIT}} -X gmountie/pkg.date={{.BUILD_DATE}}"

  build:appimage:
    deps:
      - build
      - download:linuxdeploy
    dir: build/appimage
    vars:
      EXECUTABLE: ../bin/ui
      ICON_FILE: ../../frontend/src/lib/assets/images/logo-256x256.png
    cmds:
      - rm -rf AppDir || true
      - mkdir AppDir
      - ./bin/linuxdeploy/AppRun --appdir AppDir --icon-file {{.ICON_FILE}} -d gmountie.desktop  --executable {{.EXECUTABLE}}  --output appimage

  download:linuxdeploy:
    internal: true
    vars:
      LINUXDEPLOY_APPIMAGE: https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
    generates:
      - build/appimage/bin/linuxdeploy
    cmds:
      - mkdir -p build/appimage/bin
      - curl -L -o build/appimage/bin/linuxdeploy-x86_64.AppImage {{.LINUXDEPLOY_APPIMAGE}}
      - chmod +x build/appimage/bin/linuxdeploy-x86_64.AppImage
      # We need to extract linuxdeploy for appimage to work in docker
      - cd build/appimage/bin && ./linuxdeploy-x86_64.AppImage --appimage-extract
      - mv build/appimage/bin/squashfs-root build/appimage/bin/linuxdeploy
      - rm  build/appimage/bin/linuxdeploy-x86_64.AppImage
    status:
      - test -d build/appimage/bin/linuxdeploy
