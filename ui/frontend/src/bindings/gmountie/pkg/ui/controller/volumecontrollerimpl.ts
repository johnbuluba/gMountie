// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as common$0 from "../../common/models.js";

/**
 * GetVolumes returns a list of volumes
 */
export function GetVolumes(): Promise<common$0.Volume[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(566394307) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * IsMounted checks if a volume is mounted
 */
export function IsMounted(volume: common$0.Volume): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3518043504, volume) as any;
    return $resultPromise;
}

/**
 * Mount mounts a volume
 */
export function Mount(volume: common$0.Volume): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3907923921, volume) as any;
    return $resultPromise;
}

/**
 * Unmount unmounts a volume
 */
export function Unmount(volume: common$0.Volume): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1434849136, volume) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = common$0.Volume.createFrom;
const $$createType1 = $Create.Array($$createType0);
