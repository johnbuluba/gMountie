# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - task ui:package:linux BUILD_VERSION={{.Version}} BUILD_COMMIT={{.Commit}} BUILD_DATE={{.Date}}


builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
    id: gmountie-server
    main: cmd/server/main.go
    binary: gmountie-server
    ldflags:
    - -s -w -X gmountie/pkg.version={{.Version}} -X gmountie/pkg.commit={{.Commit}} -X gmountie/pkg.date={{.Date}}
    goarch:
      - amd64
      - arm64
  - env:
    - CGO_ENABLED=0
    goos:
    - linux
    ldflags:
      - -s -w -X gmountie/pkg.version={{.Version}} -X gmountie/pkg.commit={{.Commit}} -X gmountie/pkg.date={{.Date}}
    goarch:
      - amd64
      - arm64
    id: gmountie-client
    main: cmd/client/main.go
    binary: gmountie-client

archives:
  - format: zip
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  draft: true
  # prerelease: auto
  prerelease: true
  extra_files:
    - glob: ./ui/bin/gmountie-desktop-x86_64.AppImage
      name_template: 'gMountieUI_{{ .Version }}-x86_64.AppImage'

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
